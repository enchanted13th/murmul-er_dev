<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.murmuler.organicstack.mybatis.RoomMapper">

    <select id="selectRoomDetailByRoomId" resultType="com.murmuler.organicstack.vo.RoomDetailVO">
        SELECT room_id AS roomId, member_id AS memberId, room_area AS area, room_floor AS floor, heating_id AS heatType, room_type_id AS roomType,
               sale_title AS title, rent_id AS rentType, period_num AS periodNum, period_unit AS periodUnit,
               post_id AS postType, deposit, monthly_cost AS monthlyCost, manage_cost AS manageCost, hashtag_exist AS hashtagExist,
               views, detail_explain AS detailExplain, sale_date AS writeDate, sido, sigungu, bname, bname1, bname2, jibun, roadname, road_jibun AS roadJibun, detail_addr AS detailAddr
        FROM location_tb
        JOIN room_tb USING(location_id)
        JOIN sale_tb USING(room_id)
        WHERE room_id = ${roomId}
    </select>

    <select id="selectRoomOptionByRoomId" resultType="java.lang.Integer">
        SELECT option_id FROM room_option_tb WHERE room_id = ${roomId}
    </select>

    <select id="selectRoomManageByRoomId" resultType="java.lang.Integer" >
        SELECT manage_id FROM room_manage_cost_tb WHERE room_id = ${roomId}
    </select>

    <select id="selectRoomHashtagByRoomId" resultType="java.lang.String">
        SELECT hashtag_name FROM hashtag_tb WHERE room_id = ${roomId}
    </select>

    <select id="selectRoomImgUrlByRoomId" resultType="java.lang.String">
        SELECT img_url FROM room_img_tb WHERE room_id = ${roomId}
    </select>

    <select id="selectImgCntByRoomId" parameterType="int" resultType="int">
        SELECT COUNT(*) FROM room_img_tb WHERE room_id = #{roomId}
    </select>

    <select id="selectRoomSummaryByLocation" resultType="com.murmuler.organicstack.vo.RoomSummaryVO" parameterType="hashmap">
        SELECT room_id AS roomId, latitude, longitude, post_id AS postId, sale_title AS saleTitle, room_type_id AS roomTypeId,
               rent_id AS rentId, room_area AS roomArea, deposit, monthly_cost AS monthlyCost, manage_cost AS manageCost, sale_date AS saleDate,
               views, sido, sigungu, roadname, period_num AS periodNum, period_unit AS periodUnit
        FROM location_tb
        JOIN room_tb USING(location_id)
        JOIN sale_tb USING(room_id)
        WHERE latitude &gt;= (${south})
        AND latitude &lt;= (${north})
        AND longitude &gt;= (${west})
        AND longitude &lt;= (${east})
        AND post_id = 1
    </select>

    <select id="selectMyRoomById" resultType="com.murmuler.organicstack.vo.RoomSummaryVO" >
        SELECT room_id AS roomId, latitude, longitude, post_id AS postId, sale_title AS saleTitle, room_type_id AS roomTypeId,
               rent_id AS rentId, room_area AS roomArea, deposit, monthly_cost AS monthlyCost, manage_cost AS manageCost, sale_date AS saleDate, views,
               sido, sigungu, roadname, period_num AS periodNum, period_unit AS periodUnit
        FROM sale_tb
        JOIN room_tb USING(room_id)
        JOIN location_tb USING(location_id)
        WHERE member_id = #{id}
    </select>

    <select id="selectMyPostingRoomById" resultType="com.murmuler.organicstack.vo.RoomSummaryVO">
        SELECT room_id AS roomId, latitude, longitude, post_id AS postId, sale_title AS saleTitle, room_type_id AS roomTypeId,
               rent_id AS rentId, room_area AS roomArea, deposit, monthly_cost AS monthlyCost, manage_cost AS manageCost, sale_date AS saleDate, views,
               sido, sigungu, roadname, period_num AS periodNum, period_unit AS periodUnit
        FROM sale_tb
        JOIN room_tb USING(room_id)
        JOIN location_tb USING(location_id)
        WHERE member_id = #{id} AND post_id = 1
    </select>

    <select id="selectRoomImgOne" resultType="string">
        SELECT img_url FROM room_img_tb WHERE room_id = #{id} ORDER BY img_url LIMIT 1;
    </select>

    <select id="selectRoomByRoomIds" resultType="com.murmuler.organicstack.vo.RoomSummaryVO" parameterType="java.util.List">
        SELECT room_id AS roomId, latitude, longitude, post_id AS postId, sale_title AS saleTitle, room_type_id AS roomTypeId,
               rent_id AS rentId, room_area AS roomArea, deposit, monthly_cost AS monthlyCost, manage_cost AS manageCost, sale_date AS saleDate, views,
               sido, sigungu, roadname, period_num AS periodNum, period_unit AS periodUnit
        FROM sale_tb
        JOIN room_tb USING(room_id)
        JOIN location_tb USING(location_id)
        WHERE room_id = 0 OR
        <foreach collection="list" item="item"  open="(" close=")" separator="OR">
              room_id = #{item}
        </foreach>
    </select>

    <select id="selectRoomByLikes" resultType="com.murmuler.organicstack.vo.RoomSummaryVO" parameterType="hashmap">
        SELECT room_id AS roomId, latitude, longitude, post_id AS postId, sale_title AS saleTitle, room_type_id AS roomTypeId,
               rent_id AS rentId, room_area AS roomArea, deposit, monthly_cost AS monthlyCost, manage_cost AS manageCost, sale_date AS saleDate, views,
               sido, sigungu, roadname, period_num AS periodNum, period_unit AS periodUnit
        FROM like_list_tb AS l
        JOIN sale_tb USING(room_id)
        JOIN room_tb USING(room_id)
        JOIN location_tb USING(location_id)
        WHERE l.member_id = ${memberId}
    </select>

    <select id="selectRoomIdByLocationId" parameterType="int" resultType="int">
        SELECT room_id
        FROM room_tb
        WHERE location_id = #{locationId}
    </select>

    <select id="selectLocationIdByRoomId" parameterType="int" resultType="int">
        SELECT location_id
        FROM room_tb
        WHERE room_id = #{roomId}
    </select>

    <select id="selectRoomIdByMemberId" parameterType="int" resultType="int">
        SELECT room_id
        FROM sale_tb
        WHERE member_id = #{member_id} ORDER BY room_id DESC limit 1
    </select>

    <select id="selectRoomIdListByMemberId" parameterType="int" resultType="int">
        SELECT room_id
        FROM sale_tb
        WHERE member_id = #{member_id}
    </select>

    <select id="selectRoomLocation" resultType="com.murmuler.organicstack.vo.LocationVO">
        SELECT sido, sigungu, bname, bname1, bname2, jibun, roadname as roadName,
        road_jibun as roadJibun, detail_addr as detailAddr, longitude, latitude, location_id
        FROM location_tb
        WHERE location_id = #{locationId}
    </select>

    <select id="selectRoomInfo" resultType="com.murmuler.organicstack.vo.RoomVO">
        SELECT room_area as area, room_floor as floor, heating_id as heatType,
        location_id  as locationId, room_type_id as roomType
        FROM room_tb
        WHERE room_id = #{roomId}
    </select>

    <select id="selectRoomSaleInfo" resultType="com.murmuler.organicstack.vo.SaleInfoVO">
        SELECT sale_title as title, rent_id as rentType, period_num as periodNum,
        period_unit as periodUnit, post_id as postType, deposit, monthly_cost as monthlyCost,
        manage_cost as manageCost, hashtag_exist as hashtagExist, detail_explain as detailExplain
        FROM sale_tb
        WHERE room_id = #{roomId}
    </select>

    <insert id="insertLocation" parameterType="com.murmuler.organicstack.vo.LocationVO" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO location_tb (sido, sigungu, bname, bname1, bname2, jibun, roadname, road_jibun, detail_addr, latitude, longitude)
        VALUES (#{sido}, #{sigungu}, #{bname}, #{bname1}, #{bname2}, #{jibun}, #{roadName}, #{roadJibun}, #{detailAddr}, #{latitude}, #{longitude})
    </insert>

    <select id="selectOneRecentLocation" resultType="java.lang.Integer">
        SELECT location_id FROM location_tb ORDER BY location_id DESC LIMIT 1
    </select>

    <insert id="insertRoom" parameterType="com.murmuler.organicstack.vo.RoomVO" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO room_tb (room_area, room_floor, heating_id, room_type_id, location_id)
        VALUES (#{area}, #{floor}, #{heatType}, #{roomType}, #{locationId})
    </insert>

    <select id="selectOneRecentRoom" resultType="java.lang.Integer">
        SELECT room_id FROM room_tb ORDER BY room_id DESC LIMIT 1
    </select>

    <insert id="insertSaleInfo" parameterType="com.murmuler.organicstack.vo.SaleInfoVO">
        INSERT INTO sale_tb VALUES (#{roomId}, #{title}, #{rentType}, #{periodNum}, #{periodUnit}, #{postType}, #{deposit}, #{monthlyCost}, #{manageCost}, #{hashtagExist}, DEFAULT, #{views}, #{detailExplain}, #{memberId})
    </insert>

    <insert id="insertRoomManageCost" parameterType="hashmap">
        INSERT INTO room_manage_cost_tb VALUES
        <foreach collection="manageIdList" item="manageId" separator=",">
            (#{manageId.value}, #{roomId})
        </foreach>
    </insert>

    <insert id="insertRoomOption" parameterType="hashmap">
        INSERT INTO room_option_tb VALUES
        <foreach collection="optionIdList" item="optionId" separator=",">
            (#{optionId.value}, #{roomId})
        </foreach>
    </insert>

    <insert id="insertRoomHashtag" parameterType="hashmap">
        INSERT INTO hashtag_tb VALUES
        <foreach collection="hashtagList" item="hashtag" separator=",">
            (#{roomId}, #{hashtag})
        </foreach>
    </insert>

    <insert id="insertRoomImage" parameterType="hashmap">
        INSERT INTO room_img_tb VALUES
        <foreach collection="imgUrlList" item="imgUrl" separator=",">
            (#{roomId}, #{imgUrl})
        </foreach>
    </insert>

    <update id="updateLocation" parameterType="com.murmuler.organicstack.vo.LocationVO">
        UPDATE location_tb
        SET sido=#{sido}, sigungu=#{sigungu}, bname=#{bname}, bname1=#{bname1},
            bname2=#{bname2}, jibun=#{jibun}, roadname=#{roadName}, road_jibun=#{roadJibun},
            detail_addr=#{detailAddr}, latitude=#{latitude}, longitude=#{longitude}
        WHERE location_id=#{id}
    </update>

    <update id="updateDetailLocation" parameterType="com.murmuler.organicstack.vo.LocationVO">
        UPDATE location_tb
        SET detail_addr=#{detailAddr}
        WHERE location_id=#{id}
    </update>

    <update id="updateRoom" parameterType="com.murmuler.organicstack.vo.RoomVO" >
        UPDATE room_tb
        SET room_area=#{area}, room_floor=#{floor}, heating_id=#{heatType}, room_type_id=#{roomType}
        WHERE room_id=#{id};
    </update>

    <update id="updateSale" parameterType="com.murmuler.organicstack.vo.SaleInfoVO" >
        UPDATE sale_tb
        SET sale_title=#{title}, rent_id=#{rentType}, period_num=#{periodNum}, period_unit=#{periodUnit},
            deposit=#{deposit}, monthly_cost=#{monthlyCost}, manage_cost=#{manageCost},
            hashtag_exist=#{hashtagExist}, detail_explain=#{detailExplain}
        WHERE room_id=#{roomId}
    </update>

    <update id="updateViews" parameterType="hashmap">
        UPDATE sale_tb
        SET views = ${views}
        WHERE room_id= ${roomId}
    </update>

    <update id="updatePostType" parameterType="hashmap">
        UPDATE sale_tb
        SET post_id = ${postId}
        WHERE room_id = ${roomId}
    </update>

    <delete id="deleteHashtag" parameterType="int">
        DELETE FROM hashtag_tb WHERE room_id=#{roomId}
    </delete>

    <delete id="deleteOption" parameterType="int">
        DELETE FROM room_option_tb WHERE room_id=#{roomId}
    </delete>

    <delete id="deleteManageCost" parameterType="int">
        DELETE FROM room_manage_cost_tb WHERE room_id=#{roomId}
    </delete>

    <delete id="deleteRoomImg" parameterType="int">
        DELETE FROM room_img_tb WHERE room_id=#{roomId}
    </delete>

    <delete id="deleteRoom" parameterType="int">
        DELETE FROM location_tb WHERE location_id = (SELECT location_id FROM room_tb WHERE room_id = #{roomId})
    </delete>

    <update id="updateMultiPostType" parameterType="hashmap">
        UPDATE sale_tb SET post_id = 4
        WHERE room_id in (
        <foreach collection="ids" item="id" separator=",">#{id}</foreach>
        )
    </update>

    <select id="selectRoomByLikesDetail" resultType="com.murmuler.organicstack.vo.RoomDetailVO" parameterType="hashmap">
        SELECT room_id AS roomId, room_type_id AS roomType, rent_id AS rentType, deposit, monthly_cost AS monthlyCost,
               sido, sigungu, roadname as roadName, period_num AS periodNum, period_unit AS periodUnit
        FROM like_list_tb AS l
        JOIN sale_tb USING(room_id)
        JOIN room_tb USING(room_id)
        JOIN location_tb USING(location_id)
        WHERE l.member_id = ${memberId}
    </select>

</mapper>
